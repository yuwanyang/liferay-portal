definition {
	var siteMember = "User";
	var siteType = "Open";

	macro activateInactive {
		var key_siteName = "${siteName}";

		Search.searchCP(searchTerm = "${siteName}");

		LexiconEntry.openEntryMenu(rowEntry = "${siteName}");

		MenuItem.click(menuItem = "Activate");

		Alert.viewSuccessMessage();
	}

	macro addAllMembersCP {
		Navigator.gotoNavItem(navItem = "Users");

		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#DIALOG");

		PortletEntry.selectAll();

		SelectFrameTop();

		AssertClick(locator1 = "Button#DONE", value1 = "Done");

		Alert.viewSuccessMessage();
	}

	macro addBlankCP {
		Site.addCP(
			membershipType = "${membershipType}",
			parentSiteName = "${parentSiteName}",
			singleSiteTypePermission = "${singleSiteTypePermission}",
			siteName = "${siteName}",
			siteTemplateName = "${siteTemplateName}",
			siteType = "Blank",
			uncheckPropagation = "${uncheckPropagation}"
		);
	}

	macro addCommunityCP {
		Site.addCP(
			membershipType = "${membershipType}",
			parentSiteName = "${parentSiteName}",
			siteName = "${siteName}",
			siteTemplateName = "${siteTemplateName}",
			siteType = "Community",
			uncheckPropagation = "${uncheckPropagation}"
		);
	}

	macro addCP {
		LexiconEntry.gotoAdd();

		if (!("${singleSiteTypePermission}" == "true")) {
			if (contains("${siteTemplateName}", "{siteTemplateName}")) {
				var siteTemplateName = "${siteType} Site";
			}

			LexiconEntry.gotoEntry(rowEntry = "${siteTemplateName}");

			PortletEntry.inputName(name = "${siteName}");

			Modal.save();
		}

		if (("${siteType}" == "Community") || ("${siteType}" == "Site Template")) {
			if ("${uncheckPropagation}" == "true") {
				Panel.expandPanel(panel = "Pages");

				Uncheck.uncheckToggleSwitch(locator1 = "Checkbox#ENABLE_PROPAGATION");
			}
		}

		if ("${membershipType}" == "Private") {
			Select(locator1 = "SitesEditSite#MEMBERSHIP_TYPE", value1 = "Private");
		}
		else if ("${membershipType}" == "Restricted") {
			Select(locator1 = "SitesEditSite#MEMBERSHIP_TYPE", value1 = "Restricted");
		}
		else {
			Select(locator1 = "SitesEditSite#MEMBERSHIP_TYPE", value1 = "Open");
		}

		if (isSet(parentSiteName)) {
			AssertClick(locator1 = "Button#SELECT", value1 = "Select");

			var key_parentSiteName = "${parentSiteName}";

			SelectFrame(locator1 = "SitesSelectSite#SELECT_SITE_IFRAME");

			Search.searchCP(searchTerm = "${parentSiteName}");

			var key_site = "${parentSiteName}";

			AssertTextEquals(
				locator1 = "ContentRow#ENTRY_CONTENT_ROW_TD_1_SITE_LINK",
				value1 = "${parentSiteName}"
			);

			Click(locator1 = "ContentRow#ENTRY_CONTENT_ROW_TD_1_SITE_LINK");

			var key_parentSiteName = "${parentSiteName}";

			SelectFrameTop();
		}

		ScrollWebElementIntoView(locator1 = "Button#SAVE");

		PortletEntry.save();

		AssertTextEquals(
			locator1 = "SitesEditSite#DETAILS_NAME",
			value1 = "${siteName}"
		);
	}

	macro addIntranetCP {
		Site.addCP(
			membershipType = "${membershipType}",
			parentSiteName = "${parentSiteName}",
			siteName = "${siteName}",
			siteTemplateName = "${siteTemplateName}",
			siteType = "Intranet",
			uncheckPropagation = "${uncheckPropagation}"
		);
	}

	macro addSiteTemplateCP {
		Site.addCP(
			membershipType = "${membershipType}",
			parentSiteName = "${parentSiteName}",
			siteName = "${siteName}",
			siteTemplateName = "${siteTemplateName}",
			siteType = "Site Template",
			uncheckPropagation = "${uncheckPropagation}"
		);
	}

	macro addVirtualHostsURLCP {
		Panel.expandPanel(panel = "Site URL");

		if (isSet(publicVirtualHosts)) {
			AssertTextEquals(
				locator1 = "SiteSettingsSiteURL#SITE_URL_VIRTUAL_HOSTS_PUBLIC_PAGES_LABEL",
				value1 = "Public Pages"
			);

			Type(
				locator1 = "TextInput#PUBLIC_VIRTUAL_HOST_URL",
				value1 = "${publicPageVirtualHostURL}"
			);
		}

		if (isSet(privateVirtualHosts)) {
			AssertTextEquals(
				locator1 = "SiteSettingsSiteURL#SITE_URL_VIRTUAL_HOSTS_PRIVATE_PAGES_LABEL",
				value1 = "Private Pages"
			);

			Type(
				locator1 = "TextInput#PRIVATE_VIRTUAL_HOST_URL",
				value1 = "${privatePageVirtualHostURL}"
			);
		}

		PortletEntry.save();
	}

	macro approveJoinSiteRestrictedViaMySitesPG {
		var key_userScreenName = "${userScreenName}";

		Click(locator1 = "Icon#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "SiteMemberships#MEMBERSHIP_TYPE",
			value1 = "Membership Type: Restricted"
		);

		AssertElementPresent(locator1 = "SiteMemberships#REQUEST_MESSAGE");

		Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");

		Click(locator1 = "SiteMemberships#REQUEST_MESSAGE");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertTextEquals(
			locator1 = "SiteMembershipsViewMembershipRequests#USER_NAME",
			value1 = "${userFirstName} ${userLastName}"
		);

		AssertTextEquals(
			locator1 = "SiteMembershipsViewMembershipRequests#USER_COMMENTS",
			value1 = "Please allow me to join the Restricted Site."
		);

		Click(locator1 = "SiteMembershipsViewMembershipRequests#REPLY");

		Select(
			locator1 = "SiteMembershipsViewMembershipRequests#STATUS",
			value1 = "Approve"
		);

		Type(
			locator1 = "SiteMembershipsViewMembershipRequests#REPLY_COMMENTS_AREA",
			value1 = "You may join the Restricted Site."
		);

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		Navigator.gotoNavItem(navItem = "Approved");

		AssertTextEquals(
			locator1 = "SiteMembershipsViewMembershipRequests#USER_NAME",
			value1 = "${userFirstName} ${userLastName}"
		);

		AssertTextEquals(
			locator1 = "SiteMembershipsViewMembershipRequests#REPLIER_NAME",
			value1 = "Test Test"
		);
	}

	macro assertMemberListNotVisibleCP {
		for (var userEmail : list "${usersEmailsList}") {
			var userName = StringUtil.replace("${userEmail}", "@liferay.com", "");

			Site.assertMemberNotVisibleCP(
				userFirstName = "${userName}",
				userLastName = "${userName}",
				userScreenName = "${userName}"
			);
		}
	}

	macro assertMemberNotVisibleCP {
		var key_userScreenName = "${userScreenName}";

		AssertTextNotPresent(
			locator1 = "SiteMemberships#USER_TABLE_NAME",
			value1 = "${userFirstName} ${userLastName}"
		);

		AssertTextNotPresent(
			locator1 = "SiteMemberships#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}"
		);
	}

	macro assignDefaultSiteTeam {
		Click(locator1 = "SitesEditSite#MENU_ADVANCED_TAB");

		AssertClick(
			locator1 = "SiteSettingsDefaultUserAssociations#TEAMS_SELECT",
			value1 = "Select"
		);

		SelectFrame(
			locator1 = "SiteSettingsDefaultUserAssociations#TEAMS_SELECT_IFRAME"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		var key_rowEntry = "${teamName}";

		AssertClick(
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK",
			value1 = "${teamName}"
		);

		SelectFrame(value1 = "relative=top");

		PortletEntry.save();

		Click(locator1 = "SitesEditSite#MENU_ADVANCED_TAB");

		var key_teamName = "${teamName}";

		AssertTextEquals(
			locator1 = "SiteSettingsDefaultUserAssociations#TEAMS_SELECTED",
			value1 = "${teamName}"
		);
	}

	macro assignOrganizationAsMemberCP {
		var key_cardText = "${orgName}";

		Navigator.gotoNavItem(navItem = "Organizations");

		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertTextEquals(locator1 = "Card#SPECIFIC_LARGE_TEXT", value1 = "${orgName}");

		Check(locator1 = "Card#SPECIFIC_CHECKBOX");

		SelectFrameTop();

		Button.clickDone();

		Alert.viewSuccessMessage();
	}

	macro assignSiteRoleCP {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Assign Site Roles",
			rowEntry = "${resourceName}"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		Check(locator1 = "Card#SPECIFIC_CHECKBOX", key_cardText = "${roleTitle}");

		SelectFrameTop();

		Button.clickDone();

		Alert.viewSuccessMessage();
	}

	macro assignSiteRoleToUserGroup {
		var key_userGroupName = "${userGroupName}";

		Navigator.gotoNavItem(navItem = "User Groups");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertTextEquals(
			locator1 = "UserGroups#USER_GROUP_TABLE_NAME",
			value1 = "${userGroupName}"
		);

		Click(locator1 = "SiteMembershipsUserGroups#USER_GROUP_TABLE_ACTIONS");

		AssertClick(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Assign Site Roles",
			key_menuItem = "Assign Site Roles"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		Check(locator1 = "Card#SPECIFIC_CHECKBOX", key_cardText = "${roleName}");

		SelectFrameTop();

		Button.clickDone();

		Alert.viewSuccessMessage();
	}

	macro assignUserAsMemberCP {
		var key_cardText = "${userScreenName}";

		LexiconEntry.gotoAdd();

		AssertVisible(locator1 = "Button#DONE");

		SelectFrame(locator1 = "IFrame#DIALOG");

		if (isSet(userMiddleName)) {
			AssertTextEquals(
				locator1 = "Card#SPECIFIC_LARGE_TEXT",
				value1 = "${userFirstName} ${userMiddleName} ${userLastName}"
			);
		}
		else {
			AssertTextEquals(
				locator1 = "Card#SPECIFIC_LARGE_TEXT",
				value1 = "${userFirstName} ${userLastName}"
			);
		}

		AssertTextEquals(locator1 = "Card#SPECIFIC_TEXT", value1 = "${userScreenName}");

		Check(locator1 = "Card#SPECIFIC_CHECKBOX");

		SelectFrameTop();

		Button.clickDone();

		Alert.viewSuccessMessage();
	}

	macro assignUserGroupAsMemberCP {
		Navigator.gotoNavItem(navItem = "User Groups");

		Pause(locator1 = "5000");

		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#DIALOG");

		LexiconEntry.selectEntry(rowEntry = "${userGroupName}");

		SelectFrameTop();

		Button.clickDone();

		Alert.viewSuccessMessage();
	}

	macro assignUserSitesCP {
		var key_userScreenName = "${userScreenName}";

		AssertTextEquals(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}"
		);

		AssertClick(
			locator1 = "UsersAndOrganizations#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}"
		);

		UserNavigator.gotoMemberships();

		AssertClick(
			locator1 = "UsersAndOrganizationsEditUser#SITES_SELECT_LINK",
			value1 = "Select"
		);

		SelectFrame(locator1 = "IFrame#SELECT_USER_SITES");

		var key_siteName = "${siteName}";

		Type(locator1 = "TextInput#SITE_SEARCH_KEYWORDS", value1 = "${siteName}");

		KeyPress(locator1 = "TextInput#SEARCH", value1 = "\RETURN");

		AssertTextEquals.assertPartialText(
			locator1 = "UsersAndOrganizationsEditUser#SITES_TABLE_NAME",
			value1 = "${siteName}"
		);

		Click(locator1 = "SitesSelectSite#SITES_TABLE_CHOOSE_SITE_LINK");

		SelectFrame(value1 = "relative=top");

		PortletEntry.save();
	}

	macro changeSiteLogo {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.togglePrivacy(privacy = "${pageName}");

		Click(locator1 = "Icon#COG_PAGE", key_pageName = "${pageName}");

		Panel.expandPanel(panel = "Logo");

		Page.uploadFileForLogo(logoFile = "${logoFile}");
	}

	macro configureCurrentLanguagesCP {
		var key_displaySettings = "${displaySettings}";

		if (IsNotVisible(locator1 = "SiteSettingsDisplaySettings#DEFINE_DEFAULT_AND_AVAILABLE_SITE_LANGUAGES_RADIO")) {
			if (isSet(localizedLanguageTab)) {
				Navigator.gotoNavTab(navTab = "${localizedLanguageTab}");
			}
			else {
				Navigator.gotoNavTab(navTab = "Languages");
			}
		}

		Check(
			locator1 = "SiteSettingsDisplaySettings#DEFINE_DEFAULT_AND_AVAILABLE_SITE_LANGUAGES_RADIO"
		);

		if (isSet(currentSiteLanguages)) {
			while (IsElementPresent(locator1 = "LanguageConfiguration#LANGUAGES_CURRENT_SELECT")) {
				Click(locator1 = "LanguageConfiguration#LANGUAGES_CURRENT_SELECT");

				Click(locator1 = "SiteSettingsDisplaySettings#MOVE_CURRENT_TO_AVAILABLE_BUTTON");
			}

			for (var currentSiteLanguage : list "${currentSiteLanguages}") {
				var currentSiteLanguage = "${currentSiteLanguage}";

				Select(
					locator1 = "LanguageConfiguration#LANGUAGES_AVAILABLE",
					value1 = "${currentSiteLanguage}"
				);

				Click(locator1 = "SiteSettingsDisplaySettings#MOVE_AVAILABLE_TO_CURRENT_BUTTON");

				AssertTextEquals.assertPartialText(
					locator1 = "LanguageConfiguration#LANGUAGES_CURRENT",
					value1 = "${currentSiteLanguage}"
				);
			}
		}

		if (isSet(defaultSiteLanguage)) {
			var defaultSiteLanguage = "${defaultSiteLanguage}";

			Select(locator1 = "Select#DEFAULT_LANGUAGE", value1 = "${defaultSiteLanguage}");
		}

		if (isSet(localizedSaveButton)) {
			var key_saveButton = "${localizedSaveButton}";

			AssertClick(
				locator1 = "Button#SAVE_LOCALIZED",
				value1 = "${localizedSaveButton}"
			);
		}
		else {
			Click(locator1 = "Button#SAVE");
		}

		if (isSet(localizedSuccessMessage)) {
			var localizedSuccessMessage = "${localizedSuccessMessage}";

			AssertElementPresent(locator1 = "Message#SUCCESS");
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro deactivateCP {
		var key_siteName = "${siteName}";

		Search.searchCP(searchTerm = "${siteName}");

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "${siteName}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${siteName}");

		MenuItem.clickNoError(menuItem = "Deactivate");

		AssertConfirm(value1 = "Are you sure you want to deactivate this?");

		if ("${successMessage}" == "true") {
			Alert.viewSuccessMessage();
		}
		else {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_2",
				value1 = "The site cannot be deleted or deactivated because you are accessing the site."
			);
		}
	}

	macro deleteCP {
		var key_siteName = "${siteName}";

		Search.searchCP(searchTerm = "${siteName}");

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "${siteName}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${siteName}");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();
	}

	macro disableRecycleBinCP {
		AssertClick(locator1 = "SitesEditSite#MENU_ADVANCED_TAB", value1 = "Advanced");

		Panel.expandPanel(panel = "Recycle Bin");

		Uncheck.uncheckToggleSwitchNoErrorNoAssert(
			locator1 = "Checkbox#ENABLE_RECYCLE_BIN"
		);

		AssertConfirm(
			value1 = "Disabling the Recycle Bin prevents the restoring of content that has been moved to the Recycle Bin."
		);

		AssertNotChecked.assertNotCheckedNotVisible(
			locator1 = "Checkbox#ENABLE_RECYCLE_BIN"
		);

		PortletEntry.save();
	}

	macro editCP {
		AssertTextEquals(locator1 = "TextInput#NAME", value1 = "${siteName}");

		PortletEntry.inputName(name = "${siteNameEdit}");

		PortletEntry.save();

		AssertTextEquals(locator1 = "TextInput#NAME", value1 = "${siteNameEdit}");
	}

	macro editFriendlyURLCP {
		Panel.expandPanel(panel = "Site URL");

		AssertTextEquals(
			locator1 = "SiteSettingsSiteURL#SITE_URL_FRIENDLY_URL_LABEL",
			value1 = "Friendly URL"
		);

		Pause(locator1 = "5000");

		Type(locator1 = "TextInput#FRIENDLY_URL", value1 = "${siteFriendlyURLEdit}");

		Button.clickSave();

		if ("${friendlyURLInvalid}" == "true") {
			Alert.viewRequestFailedToComplete();

			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_1",
				value1 = "The friendly URL has too many slashes."
			);

			AssertTextEquals(
				locator1 = "TextInput#FRIENDLY_URL",
				value1 = "${siteFriendlyURLEdit}"
			);
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro editGoogleAnalyticsIDCP {
		AssertClick(locator1 = "SitesEditSite#MENU_ADVANCED_TAB", value1 = "Advanced");

		Panel.expandPanel(panel = "Analytics");

		Type(
			locator1 = "TextInput#GOOGLE_ANALYTICS_ID",
			value1 = "${googleAnalyticsID}"
		);

		PortletEntry.save();
	}

	macro getSiteId {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Site Settings"
		);

		AssertElementPresent(locator1 = "SitesEditSite#SITE_ID");

		var siteId = selenium.getElementValue("SitesEditSite#SITE_ID");

		return "${siteId}";
	}

	macro gotoSiteViaMySitesPG {
		AssertClick(
			locator1 = "ListGroupItem#ITEM_NAME_LINK",
			value1 = "${siteName}",
			key_itemName = "${siteName}"
		);
	}

	macro importSiteFromTempFolder {
		AssertClick(locator1 = "Button#SELECT_FILE", value1 = "Select File");

		SikuliClick(locator1 = "OS#FILE_DIALOG_BOX_TYPE_FILE_NAME_ICON_PNG");

		var siteLARFileName = TestCase.getDownloadedTempFileName(fileNamePattern = "Public_Pages-*.lar");

		SikuliUploadTempFile(
			locator1 = "OS#FILE_DIALOG_BOX_FILE_NAME_FIELD_PNG",
			value1 = "${siteLARFileName}"
		);

		Button.click(button = "Continue");

		Button.click(button = "Import");

		AssertTextEquals(
			locator1 = "SitePagesImport#CURRENT_AND_PREVIOUS_STATUS_1",
			value1 = "Successful"
		);
	}

	macro inactivateCP {
		AssertTextEquals(locator1 = "TextInput#NAME", value1 = "${siteName}");

		AssertTextEquals(locator1 = "SitesEditSite#ACTIVE_LABEL", value1 = "Active");

		Uncheck.uncheckToggleSwitch(locator1 = "Checkbox#ACTIVE");

		PortletEntry.save();
	}

	macro joinViaMySitesPG {
		var key_siteName = "${siteName}";

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No sites were found."
		);

		Navigator.gotoNavItem(navItem = "Available Sites");

		Pause(locator1 = "3000");

		if ("${membershipType}" == "Private") {
			AssertElementNotPresent(
				locator1 = "ListGroupItem#ITEM_NAME",
				key_itemName = "${siteName}"
			);
		}
		else if ("${membershipType}" == "Restricted") {
			AssertTextEquals(
				locator1 = "ListGroupItem#ITEM_NAME",
				value1 = "${siteName}",
				key_itemName = "${siteName}"
			);

			AssertTextEquals(
				locator1 = "ListGroupItem#ITEM_SUB_INFO",
				value1 = "Members: 1",
				key_itemName = "${siteName}"
			);

			LexiconEntry.gotoEntryMenuItem(
				menuItem = "Request Membership",
				rowEntry = "${siteName}"
			);

			Type(
				locator1 = "TextArea#COMMENTS",
				value1 = "Please allow me to join the Restricted Site."
			);

			Button.clickSave();

			Alert.viewSuccessMessageText(
				successMessage = "Your request was sent. You will receive a reply by email."
			);

			MySites.viewMembershipRequested(siteName = "${siteName}");
		}
		else {
			AssertTextEquals(
				locator1 = "ListGroupItem#ITEM_NAME",
				value1 = "${siteName}",
				key_itemName = "${siteName}"
			);

			AssertTextEquals(
				locator1 = "ListGroupItem#ITEM_SUB_INFO",
				value1 = "Members: 1",
				key_itemName = "${siteName}"
			);

			LexiconEntry.gotoEntryMenuItem(menuItem = "Join", rowEntry = "${siteName}");

			Alert.viewSuccessMessage();

			AssertTextEquals(
				locator1 = "ListGroupItem#ITEM_NAME",
				value1 = "${siteName}",
				key_itemName = "${siteName}"
			);

			AssertTextEquals(
				locator1 = "ListGroupItem#ITEM_SUB_INFO",
				value1 = "Members: 2",
				key_itemName = "${siteName}"
			);

			LexiconEntry.openEntryMenu(rowEntry = "${siteName}");

			AssertVisible(
				locator1 = "MenuItem#ANY_MENU_ITEM",
				value1 = "Leave",
				key_menuItem = "Leave"
			);
		}
	}

	macro leaveViaMySitesPG {
		AssertTextEquals(
			locator1 = "ListGroupItem#ITEM_NAME",
			value1 = "${siteName}",
			key_itemName = "${siteName}"
		);

		AssertTextEquals(
			locator1 = "ListGroupItem#ITEM_SUB_INFO",
			value1 = "Members: 2",
			key_itemName = "${siteName}"
		);

		Navigator.gotoNavItem(navItem = "Available Sites");

		AssertTextEquals(
			locator1 = "ListGroupItem#ITEM_NAME",
			value1 = "${siteName}",
			key_itemName = "${siteName}"
		);

		AssertTextEquals(
			locator1 = "ListGroupItem#ITEM_SUB_INFO",
			value1 = "Members: 2",
			key_itemName = "${siteName}"
		);

		LexiconEntry.gotoEntryMenuItem(menuItem = "Leave", rowEntry = "${siteName}");

		Alert.viewSuccessMessage();

		AssertTextEquals(
			locator1 = "ListGroupItem#ITEM_NAME",
			value1 = "${siteName}",
			key_itemName = "${siteName}"
		);

		AssertTextEquals(
			locator1 = "ListGroupItem#ITEM_SUB_INFO",
			value1 = "Members: 1",
			key_itemName = "${siteName}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${siteName}");

		AssertVisible(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Join",
			key_menuItem = "Join"
		);
	}

	macro limitMembership {
		if ("${siteLimitMembership}" == "Yes") {
			Check.checkToggleSwitch(
				locator1 = "SitesEditSite#PARENT_SITE_LIMIT_MEMBERSHIP_CHECKBOX"
			);
		}
		else if ("${siteLimitMembership}" == "No") {
			Uncheck.uncheckToggleSwitch(
				locator1 = "SitesEditSite#PARENT_SITE_LIMIT_MEMBERSHIP_CHECKBOX"
			);
		}

		PortletEntry.save();
	}

	macro manageMembershipOptions {
		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Site Administration",
			portlet = "Site Settings"
		);

		if ("${selectMembershipType}" == "true") {
			AssertTextEquals(
				locator1 = "SitesEditSite#MEMBERSHIP_OPTIONS_MEMBERSHIP_TYPE_LABEL",
				value1 = "Membership Type"
			);

			Select(
				locator1 = "SitesEditSite#MEMBERSHIP_OPTIONS_MEMBERSHIP_TYPE",
				value1 = "${membershipType}"
			);
		}

		if ("${allowManualMembershipManagement}" == "true") {
			Check.checkToggleSwitch(
				locator1 = "Checkbox#ALLOW_MANUAL_MEMBERSHIP_MANAGEMENT"
			);
		}
		else if ("${allowManualMembershipManagement}" == "false") {
			Uncheck.uncheckToggleSwitch(
				locator1 = "Checkbox#ALLOW_MANUAL_MEMBERSHIP_MANAGEMENT"
			);
		}

		PortletEntry.save();
	}

	macro openSiteMembershipsAdmin {
		Navigator.openWithAppendToBaseURL(
			urlAppend = "group/${siteURLKey}/~/control_panel/manage/-/site_memberships"
		);
	}

	macro openSitesAdmin {
		Navigator.openWithAppendToBaseURL(
			urlAppend = "group/control_panel/manage/-/sites"
		);
	}

	macro openSiteSettingsAdmin {
		Navigator.openWithAppendToBaseURL(
			urlAppend = "group/${siteURLKey}/~/control_panel/manage/-/site/settings"
		);
	}

	macro removeMemberCP {
		var key_cardText = "${userScreenName}";

		Search.searchCP(searchTerm = "${userScreenName}");

		if (isSet(userMiddleName)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Card#SPECIFIC_LARGE_TEXT",
				value1 = "${userFirstName} ${userMiddleName} ${userLastName}"
			);
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "Card#SPECIFIC_LARGE_TEXT",
				value1 = "${userFirstName} ${userLastName}"
			);
		}

		AssertTextEquals(locator1 = "Card#SPECIFIC_TEXT", value1 = "${userScreenName}");

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Remove Membership",
			rowEntry = "${userScreenName}"
		);

		AssertConfirm.waitForConfirmation(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		Alert.viewSuccessMessage();
	}

	macro removeSiteRolesSiteOwnerUserGroupsCP {
		var key_userGroupName = "${userGroupName}";

		Navigator.gotoNavItem(navItem = "User Groups");

		Search.searchCP(searchTerm = "${userGroupName}");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertTextEquals(
			locator1 = "UserGroups#USER_GROUP_TABLE_NAME",
			value1 = "${userGroupName}"
		);

		LexiconEntry.openEntryMenu(rowEntry = "${userGroupName}");

		MenuItem.click(menuItem = "Assign Site Roles");

		SelectFrame(locator1 = "IFrame#DIALOG");

		Uncheck(locator1 = "Checkbox#SITE_OWNER");

		SelectFrameTop();

		AssertClick(locator1 = "Button#DONE", value1 = "Done");

		Alert.viewSuccessMessage();
	}

	macro searchCP {
		Search.searchCP(searchTerm = "Site Name");

		Site.viewSearchResultsCP(siteName = "Site Name");
	}

	macro searchMemberCP {
		var searchTerm = "${userEmailAddressSearchValue}";

		if (isSet(userScreenNameSearchValue)) {
			var searchTerm = "${userScreenNameSearchValue}";
		}
		else if (isSet(userFirstNameSearchValue)) {
			var searchTerm = "${userFirstNameSearchValue}";
		}
		else if (isSet(userLastNameSearchValue)) {
			var searchTerm = "${userLastNameSearchValue}";
		}

		Search.searchCP(searchTerm = "${searchTerm}");

		Site.viewMemberCP(
			userFirstName = "${userFirstName}",
			userLastName = "${userLastName}",
			userScreenName = "${userScreenName}"
		);
	}

	macro searchMembershipCP {
		Search.searchCP(searchTerm = "${searchValue}");

		if ("${emptyResults}" == "true") {
			AssertElementPresent(locator1 = "Message#EMPTY_INFO");
		}
		else {
			LexiconEntry.viewEntryName(rowEntry = StringUtil.unquote("${searchValue}"));
		}
	}

	macro selectPageType {
		Panel.expandPanel(panel = "Pages");

		if ("${selectPublicPages}" == "true") {
			Select(
				locator1 = "SitesEditSite#PAGES_PUBLIC_PAGES_SITE_TEMPLATE_SELECT",
				value1 = "${siteTemplate}"
			);
		}
		else if ("${selectPrivatePages}" == "true") {
			Select(
				locator1 = "SitesEditSite#PAGES_PRIVATE_PAGES_SITE_TEMPLATE_SELECT",
				value1 = "${siteTemplate}"
			);

			if ("${checkPropagation}" == "true") {
				Panel.expandPanel(panel = "Pages");

				Check.checkToggleSwitch(locator1 = "Checkbox#PRIVATE_PAGES_ENABLE_PROPAGATION");
			}
		}

		PortletEntry.save();
	}

	macro selectParentSite {
		AssertClick(locator1 = "SitesEditSite#PARENT_SITE_SELECT", value1 = "Select");

		var key_parentSiteName = "${parentSiteName}";

		SelectFrame(locator1 = "SitesSelectSite#SELECT_SITE_IFRAME");

		Search.searchCP(searchTerm = "${parentSiteName}");

		if ("${chooseButtonAvailable}" == "false") {
			AssertElementNotPresent(
				locator1 = "SitesSelectSite#SITES_TABLE_NAME",
				key_parentSiteName = "${parentSiteName}"
			);

			AssertTextEquals(
				locator1 = "Message#EMPTY_INFO",
				value1 = "No sites were found."
			);
		}

		Close(locator1 = "null");

		SelectFrame(value1 = "relative=top");
	}

	macro tearDownCP {
		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Search.searchCP(searchTerm = "Name");

		if (IsElementNotPresent(locator1 = "Message#EMPTY_INFO")) {
			PortletEntry.selectAll();

			ClickNoError(locator1 = "Icon#DELETE", value1 = "Delete");

			AssertConfirm(
				value1 = "Are you sure you want to delete this? It will be deleted immediately."
			);

			Alert.viewSuccessMessage();
		}
	}

	macro viewCannotAdd {
		LexiconEntry.gotoAdd();

		LexiconEntry.gotoEntry(rowEntry = "Blank Site");

		PortletEntry.inputName(name = "${siteName}");

		Button.clickSave();

		if ("${siteNameInvalid}" == "Duplicate") {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_MODAL_CONTENT",
				value1 = "Please enter a unique name."
			);
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_MODAL_CONTENT",
				value1 = "The Site Name cannot be blank, numeric or a reserved word such as null. The Site Name cannot contain the following invalid characters: *."
			);
		}
	}

	macro viewChildCP {
		Site.viewCP(siteName = "${siteName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "View Child Sites",
			rowEntry = "${siteName}"
		);

		Breadcrumb.viewActiveEntry(breadcrumbName = "${siteName}");

		Site.viewCP(siteName = "${childSiteName}");
	}

	macro viewCP {
		var key_siteName = "${siteName}";

		AssertElementPresent(locator1 = "Sites#SITE_TABLE_CHECKBOX");

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "${siteName}"
		);

		AssertTextEquals(locator1 = "Sites#SITE_TABLE_TYPE", value1 = "${siteType}");

		if ("${siteMember}" == "User") {
			AssertTextEquals(
				locator1 = "Sites#SITE_TABLE_MEMBERS_USERS",
				value1 = "1 ${siteMember}"
			);
		}

		AssertTextEquals(locator1 = "Sites#SITE_TABLE_ACTIVE", value1 = "Yes");

		AssertElementPresent(locator1 = "Sites#SITE_TABLE_ACTIONS");
	}

	macro viewCurrentLanguagesCP {
		var key_displaySettings = "${displaySettings}";

		if (IsNotVisible(locator1 = "SiteSettingsDisplaySettings#DEFINE_DEFAULT_AND_AVAILABLE_SITE_LANGUAGES_RADIO")) {
			Navigator.gotoNavTab(navTab = "Languages");
		}

		Check(
			locator1 = "SiteSettingsDisplaySettings#DEFINE_DEFAULT_AND_AVAILABLE_SITE_LANGUAGES_RADIO",
			value1 = "Display Settings"
		);

		for (var currentSiteLanguage : list "${currentSiteLanguages}") {
			var currentSiteLanguage = "${currentSiteLanguage}";

			AssertTextEquals.assertPartialText(
				locator1 = "LanguageConfiguration#LANGUAGES_CURRENT",
				value1 = "${currentSiteLanguage}"
			);
		}

		for (var availableSiteLanguage : list "${availableSiteLanguages}") {
			var availableSiteLanguage = "${availableSiteLanguage}";

			AssertTextEquals.assertPartialText(
				locator1 = "LanguageConfiguration#LANGUAGES_AVAILABLE",
				value1 = "${availableSiteLanguage}"
			);
		}

		if (isSet(defaultSiteLanguage)) {
			var defaultSiteLanguage = "${defaultSiteLanguage}";

			Select(locator1 = "Select#DEFAULT_LANGUAGE", value1 = "${defaultSiteLanguage}");
		}
	}

	macro viewGlobalLandingDefault {
		var key_portletName = "${portletName}";
		var key_siteName = "${siteName}";

		AssertElementPresent(
			locator1 = "ProductMenu#PRODUCT_MENU_PANEL_SITE_ADMINISTRATION_SITE_NAME"
		);

		AssertTextNotPresent(
			value1 = "You do not have the roles required to access this portlet"
		);

		AssertTextEquals(
			locator1 = "ProductMenu#PRODUCT_MENU_PANEL_MENU_ITEM",
			value1 = "${portletName}"
		);
	}

	macro viewLimitMembershipParentSiteCP {
		var key_userScreenName = "${userScreenName}";

		Navigator.gotoNavItem(navItem = "Users");

		LexiconEntry.gotoAdd();

		SelectFrame(locator1 = "IFrame#DIALOG");

		AssertTextNotPresent(
			locator1 = "SiteMembershipsAddMembers#USER_TABLE_NAME",
			value1 = "${userFirstName} ${userLastName}"
		);

		AssertTextNotPresent(
			locator1 = "SiteMembershipsAddMembers#USER_TABLE_SCREEN_NAME",
			value1 = "${userScreenName}"
		);
	}

	macro viewMemberCP {
		var key_cardText = "${userScreenName}";

		AssertTextEquals.assertPartialText(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			value1 = "${userFirstName} ${userLastName}"
		);

		AssertTextEquals(locator1 = "Card#SPECIFIC_TEXT", value1 = "${userScreenName}");

		var key_rowEntry = "${key_cardText}";

		AssertVisible(locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");
	}

	macro viewMemberListCP {
		for (var userEmail : list "${usersEmailsList}") {
			var userName = StringUtil.replace("${userEmail}", "@liferay.com", "");

			Site.viewMemberCP(
				userFirstName = "${userName}",
				userLastName = "${userName}",
				userScreenName = "${userName}"
			);
		}
	}

	macro viewMemberOrganizationCP {
		var key_cardText = "${orgName}";

		Navigator.gotoNavItem(navItem = "Organizations");

		AssertTextEquals.assertPartialText(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			value1 = "${orgName}"
		);

		if ("${toolTip}" == "true") {
			MouseOver(locator1 = "Icon#TOOLTIP");

			AssertTextEquals.assertPartialText(
				locator1 = "Message#TOOLTIP",
				value1 = "Users are not allowed to request membership. Only site administrators can add new members."
			);
		}
	}

	macro viewMemberUserGroupCP {
		Navigator.gotoNavItem(navItem = "User Groups");

		AssertTextEquals(
			locator1 = "SiteMemberships#USER_GROUPS_TABLE_NAME",
			value1 = "${userGroupName}",
			key_userGroupName = "${userGroupName}"
		);
	}

	macro viewMySitesViaMySitesPG {
		AssertTextEquals(
			locator1 = "NavBar#NAV_ITEM_LINK",
			value1 = "My Sites",
			key_navItem = "My Sites"
		);

		AssertTextEquals(
			locator1 = "ListGroupItem#ITEM_NAME",
			value1 = "${siteName}",
			key_itemName = "${siteName}"
		);

		AssertTextEquals(
			locator1 = "ListGroupItem#ITEM_SUB_INFO",
			value1 = "Members: ${memberCount}",
			key_itemName = "${siteName}"
		);
	}

	macro viewNoMySitesViaMySitesPG {
		AssertElementNotPresent(
			locator1 = "ListGroupItem#ITEM_NAME",
			key_itemName = "${siteName}"
		);

		AssertElementNotPresent(
			locator1 = "ListGroupItem#ITEM_SUB_INFO",
			key_itemName = "${siteName}"
		);

		AssertElementNotPresent(
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS",
			key_rowEntry = "${siteName}"
		);
	}

	macro viewNoSiteMembershipsRequest {
		Click(locator1 = "Icon#INFO");

		AssertElementNotPresent(locator1 = "SiteMemberships#REQUEST_MESSAGE");

		AssertTextEquals.assertPartialText(
			locator1 = "SiteMemberships#MEMBERSHIP_TYPE",
			value1 = "Membership Type: Restricted"
		);

		AssertElementNotPresent(locator1 = "SiteMemberships#REQUEST_MESSAGE");

		LexiconEntry.gotoHeaderMenuItem(menuItem = "View Membership Requests");

		AssertElementNotPresent(
			locator1 = "SiteMembershipsViewMembershipRequests#USER_NAME"
		);

		AssertTextNotPresent(
			locator1 = "SiteMembershipsViewMembershipRequests#USER_COMMENTS",
			value1 = "Please allow me to join the Restricted Site."
		);
	}

	macro viewPrivateVirtualHostUrlUserLoginRedirect {
		AssertTextEquals(
			locator1 = "TextInput#EMAIL_ADDRESS",
			value1 = "${userEmailAddress}"
		);

		AssertElementPresent(locator1 = "TextInput#PASSWORD");
	}

	macro viewSearchResultsCP {
		var key_siteName = "${siteName}";

		AssertElementPresent(locator1 = "Sites#SITE_TABLE_CHECKBOX");

		AssertTextEquals.assertPartialText(
			locator1 = "Sites#SITE_TABLE_NAME",
			value1 = "${siteName}"
		);

		AssertTextEquals(locator1 = "Sites#SITE_TABLE_TYPE", value1 = "${siteType}");

		AssertTextEquals(locator1 = "Sites#SITE_TABLE_ACTIVE", value1 = "Yes");

		AssertVisible(locator1 = "Sites#SITE_TABLE_ACTIONS");
	}

	macro viewSiteAdminPermissionsCP {
		var key_siteName = "${siteName}";

		Search.searchCP(searchTerm = "${siteName}");

		LexiconEntry.openEntryMenu(rowEntry = "${siteName}");

		AssertTextEquals(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Add Child Site",
			key_menuItem = "Add Child Site"
		);

		AssertTextEquals(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Leave",
			key_menuItem = "Leave"
		);

		AssertTextEquals(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Deactivate",
			key_menuItem = "Deactivate"
		);

		AssertTextEquals(
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Delete",
			key_menuItem = "Delete"
		);
	}

	macro viewSiteClonedFromSiteTemplateCP {
		Navigator.gotoNavTab(navTab = "General");

		Panel.expandPanel(panel = "Site Template");

		if ("${clonedFromTemplate}" == "true") {
			AssertTextEquals.assertPartialText(
				locator1 = "SiteSettingsSiteTemplate#SITE_CLONED_FROM_TEMPLATE_MESSAGE",
				value1 = "These pages are linked to site template ${siteTemplateName} without propagation of changes."
			);
		}
		else {
			AssertTextEquals.assertPartialText(
				locator1 = "SiteSettingsSiteTemplate#SITE_NOT_CLONED_FROM_TEMPLATE_MESSAGE",
				value1 = "This site is not related to a site template."
			);
		}
	}

	macro viewSiteFriendlyURLPG {
		AssertTextEquals(locator1 = "Home#SITE_NAME", value1 = "${siteName}");

		AssertLocation(value1 = "${sitePageURL}");
	}

	macro viewSiteMembershipsRequest {
		Click(locator1 = "Icon#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "SiteMemberships#MEMBERSHIP_TYPE",
			value1 = "Membership Type: Restricted"
		);

		AssertElementPresent(locator1 = "SiteMemberships#REQUEST_MESSAGE");

		Click(locator1 = "SiteMemberships#REQUEST_MESSAGE");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		AssertTextEquals(
			locator1 = "SiteMembershipsViewMembershipRequests#USER_NAME",
			value1 = "${userFirstName} ${userLastName}"
		);

		AssertTextEquals(
			locator1 = "SiteMembershipsViewMembershipRequests#USER_COMMENTS",
			value1 = "Please allow me to join the Restricted Site."
		);
	}

	macro viewSiteRoleViaSiteMembershipsCP {
		AssertTextEquals(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			value1 = "${resourceName}",
			key_cardText = "${resourceName}"
		);

		AssertTextEquals(
			locator1 = "Card#SPECIFIC_SMALL_TEXT",
			value1 = "${roleTitle}",
			key_cardText = "${resourceName}"
		);
	}

	macro viewUserGroupSiteRoleViaSiteMembershipsCP {
		AssertTextEquals(
			locator1 = "SiteMemberships#USER_GROUPS_TABLE_NAME",
			value1 = "${resourceName}",
			key_userGroupName = "${resourceName}"
		);

		AssertTextEquals(
			locator1 = "SiteMemberships#USER_GROUPS_TABLE_SITE_ROLES",
			value1 = "${roleTitle}",
			key_siteRoleName = "${roleTitle}"
		);
	}

	macro viewVirtualHostsURLPG {
		var key_pageName = "${pageName}";

		AssertTextEquals(locator1 = "Home#SITE_NAME", value1 = "${siteName}");

		AssertTextEquals(locator1 = "Home#PAGE", value1 = "${pageName}");

		AssertLocation(value1 = "${sitePageURL}");
	}
}