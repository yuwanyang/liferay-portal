@component-name = "portal-document-management"
definition {
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Documents Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This is a use case for LPS-42515"
	@priority = "4"
	test AddContract {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addContractCP(
			contractType = "NDA",
			dmContractDealName = "DM Contract Deal Name",
			dmContractDescription = "DM Contract Description",
			dmContractFile = "Document_1.pdf",
			dmContractLegalReviewer = "DM Contract Legal Reviewer",
			dmContractSigningAuthority = "DM Contract Signing Authority",
			dmContractTitle = "DM Contract Title",
			effectiveDate = "06/01/2017",
			expirationDate = "06/15/2017",
			status = "Draft"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Contract Title");

		DMDocument.viewDocumentTypePG(
			dateValue = "6/1/17",
			documentType = "Contract",
			selectOption = "NDA",
			textContent = "DM Contract Legal Reviewer"
		);

		DMDocument.viewDocumentTypePG(
			dateValue = "6/15/17",
			selectOption = "Draft",
			textContent = "DM Contract Signing Authority"
		);

		DMDocument.viewDocumentTypePG(textContent = "DM Contract Deal Name");
	}

	@description = "This is a use case for LPS-82073."
	@priority = "5"
	test AddShortcutToSiteDocument {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites"
		);

		Site.addCP(siteName = "Site Name", siteType = "Blank");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		Navigator.openSiteURL(siteName = "Liferay");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addDMShortcutCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			siteName = "Site Name"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentSize = "259B", dmDocumentTitle = "DM Document Title");
	}

	@description = "This test ensures that a user can check in a document without changing versions."
	@priority = "5"
	test CheckInDocumentAsCurrentVersion {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Check in as current version"
		);

		DMDocument.checkoutCP(dmDocumentTitle = "Check in as current version");

		Refresh();

		DMDocument.checkinCP(
			dmDocumentTitle = "Check in as current version",
			revision = "Current"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		AssertElementNotPresent(
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_ICON_LOCKED",
			key_dmDocumentTitle = "Check in as current version"
		);

		DMDocument.checkDocumentCheckboxCP(
			dmDocumentTitle = "Check in as current version"
		);

		Click(locator1 = "Icon#INFO");

		DMDocument.selectVersion();

		AssertTextEquals(
			locator1 = "DocumentsAndMedia#SIDEBAR_LATEST_VERSION",
			value1 = "Version 1.0"
		);
	}

	@description = "This test ensures that a user can check in a document as a major version."
	@priority = "5"
	test CheckInDocumentAsMajorVersion {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Check in as major version"
		);

		DMDocument.checkoutCP(dmDocumentTitle = "Check in as major version");

		Refresh();

		DMDocument.checkinCP(
			dmDocumentTitle = "Check in as major version",
			revision = "Major"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		AssertElementNotPresent(
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_ICON_LOCKED",
			key_dmDocumentTitle = "Check in as major version"
		);

		DMDocument.checkDocumentCheckboxCP(
			dmDocumentTitle = "Check in as major version"
		);

		Click(locator1 = "Icon#INFO");

		DMDocument.selectVersion();

		AssertTextEquals(
			locator1 = "DocumentsAndMedia#SIDEBAR_LATEST_VERSION",
			value1 = "Version 2.0"
		);
	}

	@description = "This test ensures that a user can check in a document as a minor version."
	@priority = "5"
	test CheckInDocumentAsMinorVersion {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMDocument.addCP(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Check in as minor version"
		);

		DMDocument.checkoutCP(dmDocumentTitle = "Check in as minor version");

		Refresh();

		DMDocument.checkinCP(
			dmDocumentTitle = "Check in as minor version",
			revision = "Minor"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		AssertElementNotPresent(
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_ICON_LOCKED",
			key_dmDocumentTitle = "Check in as minor version"
		);

		DMDocument.checkDocumentCheckboxCP(
			dmDocumentTitle = "Check in as minor version"
		);

		Click(locator1 = "Icon#INFO");

		DMDocument.selectVersion();

		AssertTextEquals(
			locator1 = "DocumentsAndMedia#SIDEBAR_LATEST_VERSION",
			value1 = "Version 1.1"
		);
	}

	@description = "This test asserts that major version increment will occur even if only metadata was changed if version increment was selected manually."
	@priority = "4"
	test CustomizeVersionNumberMajor{
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentSize = "259B", dmDocumentTitle = "DM Document Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.editCP(
			dmDocumentDescription = "DM Document Description1",
			dmDocumentDescriptionEdit = "DM Document Description Edit",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit",
			revision = "Major",
			versioning = "true"
		);

		DMDocument.viewEditCP(
			dmDocumentTitleEdit = "DM Document Title Edit",
			dmDocumentVersionNumber = "2.0"
		);
	}

	@description = "This test asserts that minor version increment will occur even if the actual file was changed if version increment was selected manually."
	@priority = "4"
	test CustomizeVersionNumberMinor{
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentSize = "259B", dmDocumentTitle = "DM Document Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.editCP(
			dmDocumentFileEdit = "Document_2.doc",
			dmDocumentTitle = "DM Document Title",
			revision = "Minor",
			versioning = "true"
		);

		DMDocument.viewEditCP(
			dmDocumentTitleEdit = "DM Document Title",
			dmDocumentVersionNumber = "1.1"
		);
	}

	@description = "This test edits the title and description of a document. It asserts minor version increment because only its metadata was updated."
	@priority = "5"
	test EditDocument {
		property app.server.types = "jboss,resin,tcserver,tomcat,weblogic,websphere,wildfly";
		property database.types = "db2,hypersonic,mariadb,mysql,oracle,postgresql,sqlserver,sybase";
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentSize = "259B", dmDocumentTitle = "DM Document Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.editCP(
			dmDocumentDescription = "DM Document Description1",
			dmDocumentDescriptionEdit = "DM Document Description Edit",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit"
		);

		DMDocument.viewEditCP(
			dmDocumentTitleEdit = "DM Document Title Edit",
			dmDocumentVersionNumber = "1.1"
		);
	}

	@priority = "5"
	test EditFolder {
		property portal.acceptance = "true";
		property testray.component.names = "Training";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name"
		);

		DMFolder.viewCP(dmFolderName = "DM Folder Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.editCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderDescriptionEdit = "DM Folder Description Edit",
			dmFolderName = "DM Folder Name",
			dmFolderNameEdit = "DM Folder Name Name"
		);

		DMFolder.viewCP(
			dmFolderName = "DM Folder Name Name",
			specificNameFolder = "true"
		);
	}

	@description = "This test ensures that only the last two versions of a file are kept when the max version limit is set."
	@priority = "5"
	test LimitMaxFileVersion {

		ProductMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings"
		);

		SystemSettings.gotoConfiguration(
			configurationCategory = "Documents and Media",
			configurationName = "Service",
			configurationScope = "System Scope"
		);

		Type(
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "2",
			key_fieldLabel = "Maximum Number Of Versions"
		);

		ScrollWebElementIntoView(locator1 = "Button#SAVE");

		AssertClick(locator1 = "Button#SAVE", value1 = "Save");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Edit this document two times"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.editCP(
			dmDocumentTitle = "Edit this document two times",
			dmDocumentTitleEdit = "First edit"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.editCP(
			dmDocumentTitle = "First edit",
			dmDocumentTitleEdit = "Second edit"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Second edit");

		for (var versionNumber : list "1.2,1.1") {
			AssertElementPresent(
				locator1 = "DocumentsAndMedia#DOCUMENT_VERSION_ANY",
				key_dmDocumentVersionNumber = "${versionNumber}"
			);
		}

		AssertElementNotPresent(
			locator1 = "DocumentsAndMedia#DOCUMENT_VERSION_ANY",
			key_dmDocumentVersionNumber = "1.0"
		);
	}

	@priority = "5"
	test MoveDocumentToFolder {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description1",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentSize = "259B", dmDocumentTitle = "DM Document Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name"
		);

		DMFolder.viewCP(dmFolderName = "DM Folder Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.moveToFolderCP(
			dmDocumentTitle = "DM Document Title",
			dmFolderName = "DM Folder Name"
		);

		DMDocument.viewMovedToFolderCP(
			dmDocumentTitle = "DM Document Title",
			dmFolderName = "DM Folder Name"
		);
	}

	@description = "This is a use case for LPS-60405."
	@priority = "5"
	test MoveDocumentToSameFolder {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.moveToFolderCP(
			dmDocumentTitle = "DM Document Title",
			dmFolderName = "Home"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentSize = "259B", dmDocumentTitle = "DM Document Title");
	}

	@priority = "4"
	test MoveFolderToFolder {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.addCP(
			dmFolderDescription = "DM Folder1 Description",
			dmFolderName = "DM Folder1 Name"
		);

		DMFolder.addCP(
			dmFolderDescription = "DM Folder2 Description",
			dmFolderName = "DM Folder2 Name"
		);

		DMFolder.moveToFolderCP(
			dmFolderName = "DM Folder1 Name",
			dmFolderName = "DM Folder2 Name",
			dmFolderName1 = "DM Folder1 Name",
			dmFolderName2 = "DM Folder2 Name"
		);
	}

	@priority = "5"
	test MoveToRecycleBinDocument {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description1",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title"
		);

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.moveToRecycleBinCP(
			assetType = "Document",
			dmDocumentTitle = "DM Document Title"
		);
	}

	@priority = "5"
	test MoveToRecycleBinFolder {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name"
		);

		DMFolder.viewCP(dmFolderName = "DM Folder Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMFolder.moveToRecycleBinCP(
			assetType = "Documents Folder",
			dmFolderName = "DM Folder Name"
		);
	}

	@description = "This is a use case for LPS-88785."
	@priority = "5"
	test PreviewPDF {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentFile = "large_file.pdf",
			dmDocumentTitle = "large_file.pdf"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "large_file.pdf");

		AssertTextEquals(locator1="Message#INFO", value1="Generating preview will take a few minutes.");

		Pause(locator1 = "3000");

		Refresh();

		AssertVisible(locator1="Toolbar#PREVIEW");
	}

	@priority = "4"
	test RotateImageViaDMSiteAdmin {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "Document_2.jpg"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		AssertVisible(locator1 = "Portlet#HEADER", value1 = "Documents and Media");

		ImageEditor.gotoImageEditorViaDM(dmDocumentTitle = "Document_2.jpg");

		ImageEditor.rotateImage(rotateDirection = "left");

		Pause(locator1 = "3000");

		ImageEditor.applyChangesAndSaveFile();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_2.jpg");

		DMDocument.viewDocumentVersionNumberCmdPG(dmDocumentVersionNumber = "1.1");
	}

	@priority = "4"
	test SearchForDocumentInHomeFolder {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		Search.searchCP(searchTerm = "DM Document Title");

		DMDocument.viewSearchResultsCP(dmDocumentTitle = "DM Document Title");
	}

	@priority = "5"
	test ViewImageEditorControls {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg"
		);

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		ImageEditor.gotoImageEditorViaDM(dmDocumentTitle = "Document_1.jpg");

		ImageEditor.viewBaseControls();
	}

	@description = "This is a use case for LPS-87135"
	@priority = "5"
	test ViewPDFViaExpand {
		ProductMenu.gotoPortlet(
			category = "Content",
			panel = "Site Administration",
			portlet = "Documents and Media"
		);

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_2.pdf",
			dmDocumentTitle = "Document_2.pdf"
		);

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "Document_2.pdf");

		DMDocument.viewPDF(pageFooter = "1 / 5");
	}
}