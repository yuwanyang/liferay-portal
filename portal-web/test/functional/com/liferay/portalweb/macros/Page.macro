definition {
	macro _addPageTypeEmbedded {
		Type(
			locator1 = "SitePagesEditPage#PAGE_TYPE_EMBEDDED_URL_FIELD",
			value1 = "${pageTypeURL}"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SitePagesEditPage#PAGE_TYPE_DESCRIPTION",
			value1 = "Show content from another website."
		);
	}

	macro _addPageTypeFullPageApplication {
		Select(
			locator1 = "SitePagesEditPage#PAGE_TYPE_FULL_PAGE_APPLICATION_SELECT",
			value1 = "${portlet}"
		);
	}

	macro _addPageTypePanel {
		var key_componentOrPortletName = "${componentName}";

		Click(locator1 = "SitePagesEditPage#PAGE_TYPE_PANEL_CHECKBOX");

		AssertChecked.assertCheckedNotVisible(
			locator1 = "SitePagesEditPage#PAGE_TYPE_PANEL_CHECKBOX_INPUT"
		);
	}

	macro addCategory {
		Navigator.gotoNavTab(navTab = "SEO");

		AssetCategorization.addCategory(
			categoryName = "${categoryName}",
			vocabularyName = "${vocabularyName}"
		);
	}

	macro addFriendlyURLLocalizedPG {
		Navigator.gotoNavTab(navTab = "General");

		PortletEntry.changeLocale(
			fieldName = "Friendly URL",
			locale = "${friendlyUrlLocalized}"
		);

		Type(locator1 = "TextInput#FRIENDLY_URL", value1 = "${localizedFriendlyURL}");
	}

	macro addJavaScript {
		SitePages.gotoPageMenuItem(menuItem = "Configure", pageName = "${pageName}");

		Navigator.gotoNavTab(navTab = "Advanced");

		Panel.expandPanel(panel = "JavaScript");

		AssertTextEquals(
			locator1 = "SitePages#JAVASCRIPT_LABEL",
			value1 = "Paste JavaScript code that is executed at the bottom of the page."
		);

		Type(locator1 = "SitePages#JAVASCRIPT_TEXTAREA", value1 = "${javaScript}");

		AssertClickNoError(locator1 = "Button#SAVE", value1 = "Save");
	}

	macro addPageTranslations {
		PortletEntry.changeLocale(fieldName = "Name", locale = "${pageTranslation}");

		PortletEntry.inputName(name = "${pageTranslationName}");

		Button.clickSave();
	}

	macro assertCannotDeleteOnlyPage {
		Click.waitForMenuToggleJSClick(
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON",
			key_pageName = "${pageName}"
		);

		MenuItem.viewNotPresent(menuItem = "Delete");
	}

	macro assertNodePortPG {
		var key_nodePort = "${nodePort}";

		AssertTextEquals.assertPartialText(
			locator1 = "Home#NODE_NAME",
			value1 = "${nodePort}"
		);
	}

	macro changeCurrentTheme {
		Click.waitForMenuToggleJSClick(
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON",
			key_pageName = "${pageName}"
		);

		MenuItem.click(menuItem = "Configure");

		Navigator.gotoNavTab(navTab = "Look and Feel");

		Click(locator1 = "SitePagesEditPage#REGULAR_UNIQUE_LOOK_AND_FEEL");

		Click(locator1 = "SitePagesEditPage#CHANGE_CURRENT_THEME_BUTTON");

		SelectFrame(locator1 = "IFrame#DIALOG");

		var key_cardText = "${themeName}";

		AssertTextPresent(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			value1 = "${key_cardText}"
		);

		Click(locator1 = "Card#SPECIFIC_LARGE_TEXT");

		SelectFrameTop(value1 = "relative=top");

		PortletEntry.save();
	}

	macro changeLayoutLogo {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.gotoPageMenuItem(menuItem = "Configure", pageName = "${pageName}");

		Navigator.gotoNavTab(navTab = "Advanced");

		Page.uploadFileForLogo(logoFile = "${logoFile}");
	}

	macro deleteFriendlyURLPG {
		Navigator.gotoNavTab(navTab = "General");

		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = "${friendlyUrlLocalized}"
		);

		Type(locator1 = "TextInput#FRIENDLY_URL", value1 = " ");

		Button.clickSave();
	}

	macro deleteLogoPG {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		if (isSet(page)) {
			SitePages.gotoPageMenuItem(menuItem = "Configure", pageName = "${page}");

			Navigator.gotoNavTab(navTab = "Advanced");
		}
		else {
			LexiconEntry.gotoHeaderMenuItem(menuItem = "Configure");

			Panel.expandPanel(panel = "Logo");
		}

		AssertClick(locator1 = "Button#DELETE", value1 = "Delete");

		PortletEntry.save();
	}

	macro disableMobileDeviceRulesAreInheritedFromPublicPages {
		Uncheck.uncheckHiddenToggleSwitch(
			locator1 = "ToggleSwitch#INHERIT_MOBILE_DEVICE_RULES_FROM_PAGE"
		);
	}

	macro editName {
		PortletEntry.inputName(name = "${pageNameEdit}");

		Button.clickSave();
	}

	macro editPageMetadata {
		Type.typeClickAt(locator1 = "TextInput#SEO_HTML_TITLE", value1 = "${HTMLTitle}");

		Type.typeClickAt(
			locator1 = "TextArea#SEO_META_TAGS_DESCRIPTION",
			value1 = "${metaTagsDescription}"
		);

		Type.typeClickAt(
			locator1 = "TextArea#SEO_META_TAGS_KEYWORDS",
			value1 = "${metaTagsKeywords}"
		);

		Button.clickSave();
	}

	macro getAuthTokenFromHtmlSource {
		var javaScript = '''
		var authToken = Liferay.authToken;

		return authToken;
		''';

		var authToken = selenium.getEval("${javaScript}");

		echo("## * Auth Token: ${authToken}");

		return "${authToken}";
	}

	macro getPlidFromHtmlSource {
		var javaScript = '''
		var plid = Liferay.ThemeDisplay.getPlid();

		return plid;
		''';

		var plid = selenium.getEval("${javaScript}");

		echo("## * p_l_id: ${plid}");

		return "${plid}";
	}

	macro gotoChildPagePG {
		MouseOver(locator1 = "Home#PAGE", key_pageName = "${pageName}");

		MouseOver(locator1 = "Home#SITE_NAME");

		MouseOver(locator1 = "Home#PAGE", key_pageName = "${pageName}");

		AssertVisible(
			locator1 = "Home#PAGE_CHILD_PAGE",
			key_childPageName = "${childPageName}"
		);

		Click(locator1 = "Home#PAGE_CHILD_PAGE", key_childPageName = "${childPageName}");
	}

	macro gotoPagePanelPortlet {
		var key_portletName = "${portletName}";

		AssertClick(locator1 = "Panel#MENU_ITEM", value1 = "${portletName}");
	}

	macro localizedPG {
		Click(
			locator1 = "Home#PORTAL_LOCALIZATION_DEFAULT_LANGUAGE_MESSAGE",
			key_pageLocale = "${pageLocale}"
		);
	}

	macro manageDeviceFamilyActions {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Manage Actions",
			rowEntry = "${deviceFamilyName}"
		);

		SelectFrame(locator1 = "IFrame#DIALOG");

		Click(locator1 = "Button#ADD_ACTION");

		PortletEntry.inputName(name = "${actionName}");

		var key_actionType = "${actionType}";

		Click(locator1 = "MobileDevice#ADD_ACTION_TYPE_OPTION");

		if ("${actionType}" == "Redirect to URL") {
			Type(locator1 = "TextInput#URL", value1 = "${actionURL}");
		}
		else if ("${actionType}" == "Redirect to Site") {
			var key_siteName = "${siteName}";

			Click(locator1 = "MobileDevice#ADD_ACTION_SITE_OPTION");

			var key_pageName = "${pageName}";

			Click(locator1 = "MobileDevice#ADD_ACTION_PAGE_OPTION");
		}

		PortletEntry.save();

		SelectFrame(value1 = "relative=top");

		var key_modalTitle = "Actions";

		Click(locator1 = "Button#CLOSE_MODAL");
	}

	macro openURLLocale {
		Navigator.openSpecificURL(url = "${localizationPageURL}");

		AssertLocation(value1 = "${localizationPageURL}");
	}

	macro selectMobileDeviceFamily {
		AssertClick(locator1 = "Button#SELECT_MOBILE_DEVICE_RULES", value1 = "Select");

		SelectFrame(locator1 = "IFrame#DIALOG");

		var key_deviceFamilyName = "${deviceFamilyName}";

		AssertClick(
			locator1 = "MobileDevice#DEVICE_FAMILY_TABLE_NAME_LINK",
			value1 = "${deviceFamilyName}"
		);

		SelectFrame(value1 = "relative=top");
	}

	@summary = "Delete all pages except the Welcome and Search Page"
	macro tearDownCP {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		while (IsElementPresent(locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ELLIPSIS", key_index = "3")) {
			Click.waitForMenuToggleJSClick(
				locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ELLIPSIS",
				key_index = "3"
			);

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm(
				value1 = "Are you sure you want to delete this? It will be deleted immediately."
			);
		}

		AssertElementNotPresent(
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ELLIPSIS",
			key_index = "3"
		);
	}

	macro tearDownPG {
		Page.tearDownCP();
	}

	macro togglePageTemplateInheritChanges {
		if ("${toggleValue}" == "enable") {
			Check.checkToggleSwitch(
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH",
				key_toggleSwitchLabel = "Inherit Changes"
			);
		}
		else if ("${toggleValue}" == "disable") {
			Uncheck.uncheckToggleSwitch(
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH",
				key_toggleSwitchLabel = "Inherit Changes"
			);
		}
	}

	macro toggleShowInPagesHierarchyMenu {
		if ("${toggleValue}" == "enable") {
			Check.checkToggleSwitch(
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH",
				key_toggleSwitchLabel = "Pages Hierarchy Menu"
			);
		}
		else if ("${toggleValue}" == "disable") {
			Uncheck.uncheckToggleSwitch(
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH",
				key_toggleSwitchLabel = "Pages Hierarchy Menu"
			);
		}
		else {
			fail("Failed. Please set ${toggleValue} to enable or disable.");
		}
	}

	macro uploadFileForLogo {
		AssertClick(locator1 = "Button#CHANGE_LOGO", value1 = "Change");

		SelectFrame(locator1 = "SitePages#LOGO_UPLOAD_IMAGE_IFRAME");

		AssertClick(locator1 = "SitePages#LOGO_UPLOAD_IMAGE_BUTTON", value1 = "Select");

		SikuliUploadCommonFile(
			locator1 = "OS#FILE_DIALOG_BOX_FILE_NAME_FIELD_PNG",
			value1 = "${logoFile}"
		);

		Pause(locator1 = "5000");

		Button.clickDone();

		Pause(locator1 = "5000");

		SelectFrameTop();

		PortletEntry.save();
	}

	macro view {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.togglePrivacy(privacy = "${privacy}");

		if (isSet(depth)) {
			SitePages.expandPageTree(depth = "${depth}");
		}

		AssertElementPresent(
			locator1 = "SitePages#LIST_GROUP_ITEM",
			key_itemName = "${pageName}"
		);
	}

	macro viewChildPageDropdown {
		ClickNoError.clickNoMouseOver(locator1 = "Home#${viewChildPageDropdown}");

		if (isSet(javaScriptPage)) {
			AssertConfirm.waitForConfirmation(value1 = "${javaScriptPage}");
		}

		MouseOver.mouseOverClickNavigation(locator1 = "Home#PAGE_2");

		var key_childPageName = "${childPageName}";

		AssertTextEquals(locator1 = "Home#PAGE_CHILD_PAGE", value1 = "${childPageName}");
	}

	macro viewCurrentTheme {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		Click.waitForMenuToggleJSClick(
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON",
			key_pageName = "${pageName}"
		);

		MenuItem.click(menuItem = "Configure");

		AssertTextPresent(
			locator1 = "SitePagesEditPage#VIEW_THEME",
			value1 = "${themeName}"
		);
	}

	macro viewCustomLogoPG {
		AssertElementPresent(locator1 = "Home#CUSTOM_LOGO");

		AssertElementNotPresent(locator1 = "Home#DEFAULT_LOGO");
	}

	macro viewDefaultLogoPG {
		AssertElementPresent(locator1 = "Home#DEFAULT_LOGO");

		AssertElementNotPresent(locator1 = "Home#CUSTOM_LOGO");
	}

	macro viewDefaultSiteTemplatePagesPG {
		Click(locator1 = "Home#PAGE_NAVIGATION_BAR");

		var key_pageName = "${pageName}";

		if ("${siteTemplate}" == "Community") {
			AssertTextEquals(locator1 = "Home#PAGE_TEMPLATE_1", value1 = "${pageName}");

			AssertTextEquals(locator1 = "Home#PAGE_TEMPLATE_2", value1 = "Wiki");
		}
		else if ("${siteTemplate}" == "Intranet") {
			AssertTextEquals(locator1 = "Home#PAGE_TEMPLATE_1", value1 = "${pageName}");

			AssertTextEquals(
				locator1 = "Home#PAGE_TEMPLATE_2",
				value1 = "Documents and Media"
			);
		}
		else if ("${siteTemplate}" == "Zoe Healthcare Theme") {
			AssertElementPresent(locator1 = "Home#SITE_NAME_LOGO");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_1");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_2");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_3");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_4");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_5");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_6");

			AssertElementPresent(locator1 = "Home#PAGE_TEMPLATE_7");
		}
	}

	macro viewEmbeddedPagePG {
		AssertTextPresent(
			locator1 = "Home#EMBEDDED_SITE_LIFERAY_BANNER_LOGO",
			value1 = "Liferay"
		);
	}

	macro viewFriendlyURL {
		AssertTextEquals(
			locator1 = "SitePages#DETAILS_FRIENDLY_BASE_URL",
			value1 = "${siteFriendlyURL}"
		);
	}

	macro viewFriendlyURLLanguageOptionsPG {
		Click(locator1 = "Button#LOCALIZATION", key_fieldName = "${fieldName}");

		for (var locale : list "${currentLanguageList}") {
			AssertElementPresent(
				locator1 = "Translation#LOCALIZATION_NAME",
				key_locale = "${locale}"
			);
		}

		if ("${assertUnavailableLanguages}" == "true") {
			for (var locale : list "${unavailableLanguageList}") {
				AssertElementNotPresent(
					locator1 = "Translation#LOCALIZATION_NAME",
					key_locale = "${locale}"
				);
			}
		}

		Click(locator1 = "Button#LOCALIZATION", key_fieldName = "${fieldName}");
	}

	macro viewInactiveRequestMessage {
		AssertTextEquals(
			locator1 = "Home#STATUS_MESSAGE",
			value1 = "This ${resource} is inactive. Please contact the administrator.",
			key_resource = "${resource}"
		);
	}

	macro viewLayoutLogoPG {
		if ("${assertLayoutLogoPresent}" == "true") {
			AssertElementPresent(locator1 = "Home#LAYOUT_LOGO");
		}
		else {
			AssertElementNotPresent(locator1 = "Home#LAYOUT_LOGO");
		}
	}

	macro viewNoDeletePagesAssociatedWithSiteTemplate {
		if (isSet(pageName)) {
			Click(
				locator1 = "SitePages#LIST_GROUP_ITEM_CARET_ICON_SPECIFIC",
				key_pageName = "${pageName}"
			);
		}

		Click.waitForMenuToggleJSClick(
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON",
			key_pageName = "${page}"
		);

		MenuItem.viewNotPresent(menuItem = "Delete");

		Click.waitForMenuToggleJSClick(
			locator1 = "SitePages#LIST_GROUP_ITEM_ELLIPSIS_ICON",
			key_pageName = "${page}"
		);

		PortletEntry.selectAll();

		ClickNoError(locator1 = "Icon#DELETE");

		AssertConfirm(
			value1 = "Are you sure you want to delete this? It will be deleted immediately."
		);

		if ((IsElementPresent(locator1 = "Message#ERROR")) && (IsVisible(locator1 = "Message#ERROR"))) {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR_4",
				value1 = "This page cannot be deleted and cannot have child pages because it is associated to a site template."
			);
		}
	}

	macro viewNoPage {
		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.togglePrivacy(privacy = "${privacy}");

		AssertElementNotPresent(
			locator1 = "SitePages#LIST_GROUP_ITEM",
			key_pageName = "${pageName}"
		);
	}

	macro viewNoPG {
		var key_pageName = "${pageName}";

		AssertElementNotPresent(locator1 = "Home#PAGE");
	}

	macro viewNoSelectCategory {
		Navigator.gotoNavTab(navTab = "SEO");

		AssertElementNotPresent(
			locator1 = "AssetCategorization#CATEGORY_SELECT",
			key_vocabularyName = "${vocabularyName}"
		);
	}

	macro viewPageFriendlyURLPG {
		if (isSet(friendlyUrlLocalized)) {
			PortletEntry.changeLocale(
				fieldName = "Friendly URL",
				locale = "${friendlyUrlLocalized}"
			);
		}

		AssertTextEquals(locator1 = "TextInput#FRIENDLY_URL", value1 = "/${pageName}");
	}

	macro viewPageLayout {
		if ("${pageLayout}" == "1 Column") {
			AssertVisible(locator1 = "Home#PAGE_COLUMN_1_LAYOUT_1_COLUMN");

			AssertElementNotPresent(locator1 = "Home#PAGE_COLUMN_2");
		}
		else if ("${pageLayout}" == "2 Column (30/70)") {
			AssertVisible(locator1 = "Home#PAGE_COLUMN_1_LAYOUT_2_COLUMNS_30_SPLIT");

			AssertVisible(locator1 = "Home#PAGE_COLUMN_2_LAYOUT_2_COLUMNS_70_SPLIT");
		}
	}

	macro viewPageLayoutColumn {
		AssertElementPresent(
			locator1 = "SitePagesEditPage#LAYOUT_CARD",
			key_columnName = "${columnName}"
		);
	}

	macro viewPageLocalization {
		AssertElementPresent(locator1 = "TextInput#SEO_HTML_TITLE");

		AssertTextEquals.assertPartialText(
			locator1 = "Button#LOCALIZATION",
			value1 = "${defaultSiteLanguageKey}",
			key_fieldName = "${fieldName}"
		);
	}

	macro viewPageLockCheck {
		Click(locator1 = "ControlMenu#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#CUSTOMIZED_PAGE_INFO",
			value1 = "This page is linked to a site template which does not allow modifications to it."
		);
	}

	macro viewPageMetadata {
		AssertTextEquals(locator1 = "TextInput#SEO_HTML_TITLE", value1 = "${HTMLTitle}");

		AssertTextEquals(
			locator1 = "TextArea#SEO_META_TAGS_DESCRIPTION",
			value1 = "${metaTagsDescription}"
		);

		AssertTextEquals(
			locator1 = "TextArea#SEO_META_TAGS_KEYWORDS",
			value1 = "${metaTagsKeywords}"
		);
	}

	macro viewPagesOrder {
		AssertTextEquals.assertPartialText(
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY",
			value1 = "${pageName1}",
			key_index = "2"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY",
			value1 = "${pageName2}",
			key_index = "3"
		);

		AssertTextEquals.assertPartialText(
			locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY",
			value1 = "${pageName3}",
			key_index = "4"
		);

		if (isSet(pageName4)) {
			AssertTextEquals.assertPartialText(
				locator1 = "SitePages#LIST_GROUP_ITEM_ROW_ENTRY",
				value1 = "${pageName4}",
				key_index = "5"
			);
		}
	}

	macro viewPageTemplate {
		Navigator.openSiteURL(siteName = "Site Name");

		Click(locator1 = "ControlMenu#INFO");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#CUSTOMIZED_PAGE_INFO",
			value1 = "This page is linked to a page template. Disable the automatic propagation of changes to this page to be able to make modifications."
		);

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.gotoPageMenuItem(menuItem = "Configure", pageName = "${page}");

		AssertTextEquals(
			locator1 = "Message#ERROR_3",
			value1 = "Some page settings are unavailable because Inherit Changes is enabled. To change these settings, disable Inherit Changes under the General section."
		);

		AssertChecked.assertCheckedNotVisible(
			locator1 = "SitePagesEditPage#PAGE_TYPE_TEMPLATE_AUTOMATICALLY_APPLY_CHANGES_CHECKBOX_GENERIC"
		);
	}

	macro viewPageTemplateTypeNotPresent {
		AssertElementNotPresent(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			key_cardText = "${pageTemplateName}"
		);
	}

	macro viewPageTemplateTypePresent {
		AssertElementPresent(
			locator1 = "Card#SPECIFIC_LARGE_TEXT",
			key_cardText = "${pageTemplateName}"
		);
	}

	macro viewPanelPortletListCP {
		ProductMenuHelper.openProductMenu();

		ProductMenu.gotoPortlet(
			category = "Build",
			panel = "Site Administration",
			portlet = "Pages"
		);

		SitePages.gotoPageMenuItem(menuItem = "Configure", pageName = "${pageName}");

		var key_componentName = "${componentName}";

		if (IsElementPresent(locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_COMPONENT_TREE_ARROW")) {
			Click(locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_COMPONENT_TREE_ARROW");
		}

		var key_componentOrPortletName = "${componentName}";

		AssertChecked.assertCheckedNotVisible(
			locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_CHECKBOX_INPUT"
		);

		for (var portletName : list "${portletNameList}") {
			var key_componentOrPortletName = "${portletName}";

			AssertChecked.assertCheckedNotVisible(
				locator1 = "SitePages#DETAILS_PAGE_TYPE_PANEL_CHECKBOX_INPUT"
			);
		}
	}

	macro viewPanelPortletListPG {
		var key_componentName = "${componentName}";

		AssertTextEquals(locator1 = "Panel#PANEL_TITLE", value1 = "${componentName}");

		var key_pageName = "${pageName}";

		AssertTextEquals(locator1 = "Panel#PANEL_PAGE_TITLE", value1 = "${pageName}");

		AssertTextEquals(
			locator1 = "Panel#PANEL_PAGE_DEFAULT_INFORMATION",
			value1 = "Please select a tool from the left menu."
		);

		for (var portletName : list "${portletNameList}") {
			var key_portletName = "${portletName}";

			AssertTextEquals(locator1 = "Panel#MENU_ITEM", value1 = "${portletName}");
		}
	}

	macro viewRTLLayout {
		AssertCssValue(
			locator1 = "Home#SITE_NAME",
			locator2 = "direction",
			value1 = "rtl"
		);

		AssertCssValue(
			locator1 = "ProductMenu#TOGGLE",
			locator2 = "text-align",
			value1 = "right"
		);

		AssertCssValue(
			locator1 = "ProductMenu#PRODUCT_MENU_OPENED",
			locator2 = "right",
			value1 = "0px"
		);
	}

	macro viewSelectedLayoutColumn {
		AssertElementPresent(
			locator1 = "SitePagesEditPage#LAYOUT_CARD_SELECTED",
			key_columnName = "${columnName}"
		);
	}

	macro viewSiteNameTranslationsPG {
		LanguagePortlet.selectLanguagePG(locale = "${locale}", textIcon = "${textIcon}");

		AssertTextEquals(locator1 = "Home#SITE_NAME", value1 = "${siteName}");
	}

	macro viewSpecificPG {
		for (var pageName : list "${pageNameList}") {
			var key_pageName = "${pageName}";

			AssertTextEquals(locator1 = "Home#PAGE", value1 = "${pageName}");
		}
	}

	macro viewTranslationsPG {
		Navigator.openSpecificURL(url = "${sitePageURL}");

		AssertLocation(value1 = "${sitePageURL}");

		Alert.viewLocalizationMessage(
			defaultLanguageLocalizationMessage = "${defaultLanguageLocalizationMessage}",
			key_pageLocale = "${defaultLanguageLocalizationMessage}",
			preferredLanguageLocalizationMessage = "${preferredLanguageLocalizationMessage}",
			translationLanguageLocalizationMessage = "${translationLanguageLocalizationMessage}"
		);
	}

	macro viewURLLocale {
		if (isSet(localizationOption)) {
			AssertClick(
				locator1 = "Home#PORTAL_LOCALIZATION_DEFAULT_LANGUAGE_MESSAGE",
				value1 = "${localizationOption}",
				key_pageLocale = "${localizationOption}"
			);
		}

		AssertLocation(value1 = "${localizationPageURL}");
	}

	macro viewWithWorkflowPG {
		Pause(locator1 = "5000");

		if ("${workflowStatus}" == "Ready for Publication") {
			AssertElementPresent(locator1 = "Staging#STAGING_MENU_READY_FOR_PUBLICATION");
		}
		else {
			AssertTextEquals(
				locator1 = "Message#WORKFLOW_STATUS",
				value1 = "${workflowStatus}"
			);
		}

		AssertClick.assertPartialTextClickAt(
			locator1 = "Staging#LIVE_BUTTON",
			value1 = "Live"
		);

		var key_pageName = "${pageName}";

		AssertElementNotPresent(locator1 = "Home#PAGE");
	}
}